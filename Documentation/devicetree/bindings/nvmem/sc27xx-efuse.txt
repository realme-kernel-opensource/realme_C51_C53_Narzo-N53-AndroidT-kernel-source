= Spreadtrum SC27XX PMIC eFuse device tree bindings =

Required properties:
- compatible: Should be one of the following.
	"sprd,sc2720-efuse"
	"sprd,sc2721-efuse"
	"sprd,sc2723-efuse"
	"sprd,sc2730-efuse"
	"sprd,sc2731-efuse"
	"sprd,ump9620-efus"
	"sprd,ump9621-efus"

- reg: Specify the address offset of efuse controller.
- hwlocks: Reference to a phandle of a hwlock provider node.

= Data cells =
Are child nodes of eFuse, bindings of which as described in
bindings/nvmem/nvmem.txt

Example:

	sc2731_pmic: pmic@0 {
		compatible = "sprd,sc2731";
		reg = <0>;
		spi-max-frequency = <26000000>;
		interrupts = <GIC_SPI 31 IRQ_TYPE_LEVEL_HIGH>;
		interrupt-controller;
		#interrupt-cells = <2>;
		#address-cells = <1>;
		#size-cells = <0>;

		efuse@380 {
			compatible = "sprd,sc2731-efuse";
			reg = <0x380>;
			#address-cells = <1>;
			#size-cells = <1>;
			hwlocks = <&hwlock 12>;

			/* Data cells */
			thermal_calib: calib@10 {
				reg = <0x10 0x2>;
			};
		};
	};

= Data consumers =
Are device nodes which consume nvmem data cells.

Example:

	thermal {
		...
		nvmem-cells = <&thermal_calib>;
		nvmem-cell-names = "calibration";
	};

Aliases:
For multi instance eFuses, each eFuse should have a number
similar to efusen (n = 0,1) in the alias node.
The eFuse driver should use "of_alias_get_id()" to retrieve the device ID.

Example:

	aliases {
		pmic_efuse0 = &ump9620_efuse;
		pmic_efuse1 = &ump9621_efuse;
	};

	ump9621_efuse: efuse@800 {
		compatible = "sprd,ump9621-efuse", "sprd,sc27xx-efuse";
		reg = <0x800>;
		#address-cells = <1>;
		#size-cells = <1>;
		hwlocks = <&hwlock 15>;
		/* Data cells */
	};
